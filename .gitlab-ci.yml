---
variables:
  DOCKER_IMAGE_VERSION: "1.0"
  DOCKER_IMAGE_NAME: cdpcli-ddp
  DOCKER_IMAGE_URL: $DOCKER_REGISTRY/$ARTIFACTORY_REPOSITORY_NAME/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_VERSION
# install (installs a CDP environment and its attached datalake)
# delete (deletes a CDP environment and its attached datalake)
# start (starts a CDP environment and its attached datalake)
# stop (stops environment and its attached datalake)
# install_cml (installs CML cluster)
# delete_cml (deletes a CML cluster)
# install_cde (installs a CDE cluster)
# delete_cde (deletes a CDE cluster)
  ACTION: install_cde
  CDP_ENV_NAME: devo-cdp-lab-env01
  ENV: lab
  CML_CLUSTERS: "devo-cdp-lab-env01-cml01" # space delimited list of CML clusters as per Gitlab variable limitation
  CDE_CLUSTERS: "devo-cdp-lab-env01-cde01" # space delimited list of CDE clusters as per Gitlab variable limitation

image: ${DOCKER_IMAGE_URL}

default:
  tags:
    - docker

stages:
  - install_cdp_env
  - install_cdp_dlake
  - delete_cdp_dlake
  - delete_cdp_env
  - start
  - stop
  - install_cml
  - delete_cml
  - install_cde
  - install_cde_vc

include:
  - 'pipeline/install_cdp_env.yml'
  - 'pipeline/install_cdp_dlake.yml'
  - 'pipeline/delete_cdp_dlake.yml'
  - 'pipeline/delete_cdp_env.yml'
  - 'pipeline/start_cdp_env.yml'
  - 'pipeline/stop_cdp_env.yml'
  - 'pipeline/install_cml.yml'
  - 'pipeline/delete_cml.yml'
  - 'pipeline/install_cde.yml'
  - 'pipeline/install_cde_vc.yml'
  # - 'pipeline/delete_cde.yml'

  #TODO: Add 'grant access to admin/jumpserver role AWS IAM role EKS cluster control plane'



# cde_delete:
#   stage: delete
#   before_script:
#     - cdp de disable-service --generate-cli-skeleton > skel.json
#   script:
#     - >
#       for CDE_CLUSTER_NAME in $CDE_CLUSTERS; do
#         export CDE_CLUSTER_NAME=$CDE_CLUSTER_NAME
#         timeout 90m bash wait_for_del.sh "CDE"
#       done
#   artifacts:
#     paths:
#       - "*.json"
#     expire_in: 30 days
#     when: always
#   rules:
#     - if: $CI_PIPELINE_SOURCE != "schedule" && $ACTION == "delete"
#       when: manual




